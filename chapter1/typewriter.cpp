#include <bits/stdc++.h>
using namespace std;
char page[60][60];
string big[5][27] = { {".***..", "****..", ".****.", "****..", "*****.", "*****.", ".****.", "*...*.", "*****.", "..***.", "*...*.", "*.....", "*...*.", "*...*.", ".***..", "****..", ".***..", "****..", ".****.", "*****.", "*...*.", "*...*.", "*...*.", "*...*.", "*...*.", "*****.", "......"},{"*...*.", "*...*.", "*...*.", "*...*.", "*.....", "*.....", "*.....", "*...*.", "..*...", "...*..", "*..*..", "*.....", "**.**.", "**..*.", "*...*.", "*...*.", "*...*.", "*...*.", "*.....", "*.*.*.", "*...*.", "*...*.", "*...*.", ".*.*..", ".*.*..", "...*..", "......"},{"*****.", "****..", "*.....", "*...*.", "***...", "***...", "*..**.", "*****.", "..*...", "...*..", "***...", "*.....", "*.*.*.", "*.*.*.", "*...*.", "****..", "*...*.", "****..", ".***..", "..*...", "*...*.", ".*.*..", "*.*.*.", "..*...", "..*...", "..*...", "......"},{"*...*.", "*...*.", "*.....", "*...*.", "*.....", "*.....", "*...*.", "*...*.", "..*...", "*..*..", "*..*..", "*.....", "*...*.", "*..**.", "*...*.", "*.....", "*..**.", "*..*..", "....*.", "..*...", "*...*.", ".*.*..", "**.**.", ".*.*..", "..*...", ".*....", "......"},{"*...*.", "****..", ".****.", "****..", "*****.", "*.....", ".***..", "*...*.", "*****.", ".**...", "*...*.", "*****.", "*...*.", "*...*.", ".***..", "*.....", ".****.", "*...*.", "****..", ".***..", ".***..", "..*...", "*...*.", "*...*.", "..*...", "*****.", "......"} };
int main()
{
    string s;
    memset(page,'.',sizeof(page));
    while(cin >> s)
    {
        char type = s[1];
        if(type == 'E')
        {
            for(int i = 0 ; i < 60 ; i++)
            {
                for(int j = 0 ; j < 60 ; j++)
                cout << page[i][j];
                cout << endl;
            }
            cout << "\n------------------------------------------------------------\n" << endl;
            memset(page,'.',sizeof(page));
        }
        else
        {
            cin >> s;
            int ss,sl;
            bool font = false;
            if(s[1] == '5')
            font = true;
            int R,C = 1;
            cin >> R;
            if(type == 'P')
            cin >> C;
            R--;C--;
            getline(cin,s);
            ss = s.find_first_of("|") + 1;
            sl = s.find_last_of("|");
            int len = sl - ss;
            if(!font)
            {
                if(type == 'R') C = max(0,60-len);
                if(type == 'C') C = max(0,30-len/2);
                while(ss < sl && C < 60)
                {
                    if(s[ss] != ' ') page[R][C] = s[ss];
                    ss++; C++;
                }
            }
            else
            {
                int limit = ( R > 55 ) ? 60 - R : 5 ;
                if(type == 'R')
                {
                    C = 59;
                    int si = sl - 1;
                    while(si >= ss && C >= 0)
                    {
                        if(s[si] == ' ')
                        {
                            C -= 6;
                        }
                        else
                        {
                            int alpha = s[si] - 'A';
                            for(int i = 0 ; i < limit ; i++)
                            {
                                for(int j = 0 ; j < 6 ; j++)
                                {
                                    if( C-j < 0) break;
                                    else if( big[i][alpha][5-j] == '*') page[R+i][C-j] = '*';
                                }
                            }
                            C -= 6;
                        }   
                        si--;
                    }
                }
                else if(type == 'C')
                {
                    C = 27;
                    int si = ss + len/2;
                    if(len%2 == 0) C += 3;
                    while(si < sl && C < 60)
                    {
                        if( s[si] == ' ')
                        {
                            C += 6;
                        }
                        else
                        {
                            int alpha = s[si] - 'A';
                            for(int i = 0 ; i < limit ; i++)
                            {
                                for(int j = 0 ; j < 6 ; j++)
                                {
                                    if( C+j >= 60 ) break;
                                    else if( big[i][alpha][j] == '*') page[R+i][C+j] = '*';
                                }
                            }
                            C += 6;
                        }
                        si++;
                    }
                    si = ss + len/2 - 1;
                    C = 26;
                    if(len%2 == 0) C += 3;
                    while(si >= ss && C >= 0)
                    {
                        if(s[si] == ' ')
                        C -= 6;
                        else
                        {
                            int alpha = s[si] - 'A';
                            for(int i = 0 ; i < limit ; i++)
                            {
                                for(int j = 0 ; j < 6 ; j++)
                                {
                                    if(C-j < 0) break;
                                    else if( big[i][alpha][5-j] == '*' ) page[R+i][C-j] = '*';
                                }
                            }
                            C -= 6;
                        }
                        si--;
                    }
                }
                else
                {
                    while(ss < sl && C < 60)
                    {
                        if( s[ss] == ' ')
                        C += 6;
                        else
                        {
                            int alpha = s[ss] - 'A';
                            for(int i = 0 ; i < limit ; i++)
                            {
                                for(int j = 0 ; j < 6 ; j++)
                                {
                                    if(C+j >= 60) break;
                                    else if(big[i][alpha][j] == '*') page[R+i][C+j] = '*';
                                }
                            }
                            C += 6;
                        }
                        ss++;
                    }
                }
            }
        }
    }
}    